# The initial docker image to install all required packages. Installing the gdal package is quite cumbersome
# and therefore the image that is create with this image is used for further development. 
# Choose your desired base image 
FROM jupyter/scipy-notebook:latest

# Install python3 libraries
RUN conda install gdal rtree
RUN pip install --upgrade pip
RUN pip install geopandas netCDF4 shapely threedigrid openpyxl fiona==1.8a1 folium descartes apscheduler xlrd xlwt && \
    plotly lizard_connector tqdm

# Create a Python 2.x environment using conda including at least the ipython kernel
# and the kernda utility. Add any additional packages you want available for use
# in a Python 2 notebook to the first line here (e.g., pandas, matplotlib, etc.)
RUN conda create --quiet --yes -p $CONDA_DIR/envs/python2 python=2.7 ipython ipykernel kernda gdal rtree && \
    conda clean -tipsy

#COPY requirements.txt /tmp/
# RUN $CONDA_DIR/envs/python2/bin/pip install --requirement /tmp/requirements.txt && \
RUN $CONDA_DIR/envs/python2/bin/pip install --upgrade pip numpy
RUN $CONDA_DIR/envs/python2/bin/pip install netCDF4 shapely geopandas pyqtgraph h5py matplotlib scipy && \
    threedigrid[geo,results] ipywidgets openpyxl xlrd xlwt fiona==1.8a1 requests clint descartes apscheduler && \
    tqdm folium plotly lizard_connector && \    
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

# RUN conda install -n python2 rtree #Install in another environment

USER root

# Create a global kernelspec in the image and modify it so that it properly activates
# the python2 conda environment.
RUN $CONDA_DIR/envs/python2/bin/python -m ipykernel install && \
$CONDA_DIR/envs/python2/bin/kernda -o -y /usr/local/share/jupyter/kernels/python2/kernel.json

USER $NB_USER
